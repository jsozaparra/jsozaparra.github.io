describe("animate option",function(){var t,e,o;beforeEach(function(){(t=document.createElement("div")).style.width="200px",t.style.height="200px",document.body.appendChild(t),(e=L.map(t,{maxZoom:18,trackResize:!1})).fitBounds(new L.LatLngBounds([[1,1],[2,2]]))}),afterEach(function(){o instanceof L.MarkerClusterGroup&&(o.removeLayers(o.getLayers()),e.removeLayer(o)),e.remove(),t.remove(),t=e=o=null}),it("hooks animated methods version by default",function(){o=L.markerClusterGroup().addTo(e);var t=L.MarkerClusterGroup.prototype._withAnimation;expect(o._animationStart).to.be(t._animationStart),expect(o._animationZoomIn).to.be(t._animationZoomIn),expect(o._animationZoomOut).to.be(t._animationZoomOut),expect(o._animationAddLayer).to.be(t._animationAddLayer);var a=o._topClusterLevel;t=L.MarkerCluster.prototype,expect(a._animationSpiderfy).to.be(t._animationSpiderfy),expect(a._animationUnspiderfy).to.be(t._animationUnspiderfy)}),it("hooks non-animated methods version when set to false",function(){o=L.markerClusterGroup({animate:!1}).addTo(e);var t=L.MarkerClusterGroup.prototype._noAnimation;expect(o._animationStart).to.be(t._animationStart),expect(o._animationZoomIn).to.be(t._animationZoomIn),expect(o._animationZoomOut).to.be(t._animationZoomOut),expect(o._animationAddLayer).to.be(t._animationAddLayer);var a=o._topClusterLevel;t=L.MarkerClusterNonAnimated.prototype,expect(a._animationSpiderfy).to.be(t._animationSpiderfy),expect(a._animationUnspiderfy).to.be(t._animationUnspiderfy)}),it("always hooks non-animated methods version when L.DomUtil.TRANSITION is false",function(){var t=L.DomUtil,a={};for(k in t)a[k]=t[k];a.TRANSITION=!1,L.DomUtil=a;try{o=L.markerClusterGroup({animate:!0}).addTo(e);var n=L.MarkerClusterGroup.prototype._noAnimation;expect(o._animationStart).to.be(n._animationStart),expect(o._animationZoomIn).to.be(n._animationZoomIn),expect(o._animationZoomOut).to.be(n._animationZoomOut),expect(o._animationAddLayer).to.be(n._animationAddLayer);var i=o._topClusterLevel;n=L.MarkerClusterNonAnimated.prototype,expect(i._animationSpiderfy).to.be(n._animationSpiderfy),expect(i._animationUnspiderfy).to.be(n._animationUnspiderfy)}finally{L.DomUtil=t}})});
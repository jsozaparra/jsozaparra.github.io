describe("getVisibleParent",function(){var e,r,t;beforeEach(function(){(t=document.createElement("div")).style.width="200px",t.style.height="200px",document.body.appendChild(t),(r=L.map(t,{maxZoom:18,trackResize:!1})).fitBounds(new L.LatLngBounds([[1,1],[2,2]]))}),afterEach(function(){e.clearLayers(),r.removeLayer(e),r.remove(),document.body.removeChild(t),e=r=t=null}),it("gets the marker if the marker is visible",function(){e=new L.MarkerClusterGroup;var t=new L.Marker([1.5,1.5]);e.addLayer(t),r.addLayer(e);var a=e.getVisibleParent(t);expect(a).to.be(t)}),it("gets the visible cluster if it is clustered",function(){e=new L.MarkerClusterGroup;var t=new L.Marker([1.5,1.5]),a=new L.Marker([1.5,1.5]);e.addLayers([t,a]),r.addLayer(e);var n=e.getVisibleParent(t);expect(n).to.be.a(L.MarkerCluster),expect(n._icon).to.not.be(null),expect(n._icon).to.not.be(undefined)}),it("returns null if the marker and parents are all not visible",function(){e=new L.MarkerClusterGroup;var t=new L.Marker([5.5,1.5]),a=new L.Marker([5.5,1.5]);e.addLayers([t,a]),r.addLayer(e);var n=e.getVisibleParent(t);expect(n).to.be(null)})});
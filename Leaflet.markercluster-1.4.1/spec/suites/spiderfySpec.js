describe("spiderfy",function(){var e,r,a,t;beforeEach(function(){t=sinon.useFakeTimers(),(e=document.createElement("div")).style.width="200px",e.style.height="200px",document.body.appendChild(e),(r=L.map(e,{maxZoom:18,trackResize:!1})).fitBounds(new L.LatLngBounds([[1,1],[2,2]]))}),afterEach(function(){a instanceof L.MarkerClusterGroup&&(a.removeLayers(a.getLayers()),r.removeLayer(a)),r.remove(),e.remove(),t.restore(),e=r=a=t=null}),it("Spiderfies 2 Markers",function(){a=new L.MarkerClusterGroup;var e=new L.Marker([1.5,1.5]),t=new L.Marker([1.5,1.5]);a.addLayer(e),a.addLayer(t),r.addLayer(a),e.__parent.spiderfy(),expect(e._icon.parentNode).to.be(r._panes.markerPane),expect(t._icon.parentNode).to.be(r._panes.markerPane)}),it("Spiderfies 2 CircleMarkers",function(){a=new L.MarkerClusterGroup;var e=new L.CircleMarker([1.5,1.5]),t=new L.CircleMarker([1.5,1.5]);a.addLayer(e),a.addLayer(t),r.addLayer(a),e.__parent.spiderfy(),expect(e._path.parentNode.parentNode.parentNode).to.be(r.getPane("overlayPane")),expect(t._path.parentNode.parentNode.parentNode).to.be(r.getPane("overlayPane"))}),it("Spiderfies 2 Circles",function(){a=new L.MarkerClusterGroup;var e=new L.Circle([1.5,1.5],10),t=new L.Circle([1.5,1.5],10);a.addLayer(e),a.addLayer(t),r.addLayer(a),e.__parent.spiderfy(),expect(e._path.parentNode.parentNode.parentNode).to.be(r.getPane("overlayPane")),expect(t._path.parentNode.parentNode.parentNode).to.be(r.getPane("overlayPane"))}),it("Spiderfies at current zoom if all child markers are at the exact same position",function(){a=new L.MarkerClusterGroup;var e=new L.Marker([1.5,1.5]),n=new L.Marker([1.5,1.5]);a.addLayers([e,n]),r.addLayer(a);for(var o=e.__parent,i=r.getZoom();o._zoom!==i;)o=o.__parent;expect(i).to.be.lessThan(10),o.fireEvent("click",null,!0),t.tick(1e3),expect(r.getZoom()).to.equal(i),expect(e._icon.parentNode).to.be(r._panes.markerPane),expect(n._icon.parentNode).to.be(r._panes.markerPane)}),it("Spiderfies at current zoom if all child markers are still within a single cluster at map maxZoom",function(){a=new L.MarkerClusterGroup;var e=new L.Marker([1.5,1.50001]),n=new L.Marker([1.5,1.5]);a.addLayers([e,n]),r.addLayer(a),expect(e.__parent._zoom).to.equal(18);for(var o=e.__parent,i=r.getZoom();o._zoom!==i;)o=o.__parent;expect(i).to.be.lessThan(10),o.fireEvent("click",null,!0),t.tick(1e3),expect(r.getZoom()).to.equal(i),expect(e._icon.parentNode).to.be(r._panes.markerPane),expect(n._icon.parentNode).to.be(r._panes.markerPane)}),it("removes all markers and spider legs when group is removed from map",function(){a=new L.MarkerClusterGroup;var e=new L.Marker([1.5,1.5]),t=new L.Marker([1.5,1.5]);a.addLayers([e,t]),r.addLayer(a),e.__parent.spiderfy(),expect(r._panes.markerPane.childNodes.length).to.be(3),expect(r.getPane("overlayPane").firstChild.firstChild.childNodes.length).to.be(2)}),it('adds then removes class "leaflet-cluster-anim" from mapPane on spiderfy',function(){a=new L.MarkerClusterGroup;var e=new L.Marker([1.5,1.5]),n=new L.Marker([1.5,1.5]);a.addLayers([e,n]),r.addLayer(a),e.__parent.spiderfy(),expect(r._panes.mapPane.className).to.contain("leaflet-cluster-anim"),t.tick(1e3),expect(r._panes.mapPane.className).to.not.contain("leaflet-cluster-anim")}),it('adds then removes class "leaflet-cluster-anim" from mapPane on unspiderfy',function(){a=new L.MarkerClusterGroup;var e=new L.Marker([1.5,1.5]),n=new L.Marker([1.5,1.5]);a.addLayers([e,n]),r.addLayer(a),e.__parent.spiderfy(),t.tick(1e3),e.__parent.unspiderfy(),expect(r._panes.mapPane.className).to.contain("leaflet-cluster-anim"),t.tick(1e3),expect(r._panes.mapPane.className).to.not.contain("leaflet-cluster-anim")}),it("fires unspiderfied event on unspiderfy",function(e){a=new L.MarkerClusterGroup;var n=new L.Marker([1.5,1.5]),o=new L.Marker([1.5,1.5]);a.addLayers([n,o]),r.addLayer(a),n.__parent.spiderfy(),t.tick(1e3),a.on("unspiderfied",function(r){expect(r.target).to.be(a),expect(r.cluster).to.be.a(L.Marker),expect(r.markers[1]).to.be(n),expect(r.markers[0]).to.be(o),e()}),n.__parent.unspiderfy(),t.tick(1e3)}),it('does not leave class "leaflet-cluster-anim" on mapPane when group is removed while spiderfied',function(){a=new L.MarkerClusterGroup;var e=new L.Marker([1.5,1.5]),n=new L.Marker([1.5,1.5]);a.addLayers([e,n]),r.addLayer(a),e.__parent.spiderfy(),t.tick(1e3),r.removeLayer(a),expect(r._panes.mapPane.className).to.not.contain("leaflet-cluster-anim")}),describe("zoomend event listener",function(){it("unspiderfies correctly",function(){a=new L.MarkerClusterGroup;var e=new L.Circle([1.5,1.5],10),t=new L.Circle([1.5,1.5],10);a.addLayer(e),a.addLayer(t),r.addLayer(a),e.__parent.spiderfy(),expect(a._spiderfied).to.not.be(null),r.fire("zoomend"),expect(a._spiderfied).to.be(null)})}),describe("spiderfied event listener",function(){it("Spiderfies 2 Markers",function(e){a=new L.MarkerClusterGroup;var n=new L.Marker([1.5,1.5]),o=new L.Marker([1.5,1.5]);a.addLayer(n),a.addLayer(o),r.addLayer(a),a.on("spiderfied",function(r){expect(r.target).to.be(a),expect(r.cluster).to.be.a(L.Marker),expect(r.markers[1]).to.be(n),expect(r.markers[0]).to.be(o),e()}),n.__parent.spiderfy(),t.tick(200)}),it("Spiderfies 2 Circles",function(e){a=new L.MarkerClusterGroup;var n=new L.Circle([1.5,1.5],10),o=new L.Circle([1.5,1.5],10);a.addLayer(n),a.addLayer(o),r.addLayer(a),a.on("spiderfied",function(r){expect(r.target).to.be(a),expect(r.cluster).to.be.a(L.Marker),expect(r.markers[1]).to.be(n),expect(r.markers[0]).to.be(o),e()}),n.__parent.spiderfy(),t.tick(200)})})});
var path=require("path");desc("Check Leaflet.markercluster source for errors with JSHint"),task("lint",function(){jake.exec("jshint",{printStdout:!0},function(){console.log("\tCheck passed.\n"),complete()})}),desc("Combine Leaflet.markercluster source files"),task("build",["lint"],function(){jake.exec("npm run-script rollup",function(){console.log("Rolled up.")})}),desc("Compress bundled files"),task("uglify",["build"],function(){jake.exec("npm run-script uglify",function(){console.log("Uglyfied.")})}),desc("Run PhantomJS tests"),task("test",["lint"],function(){function e(e){return-1!==process.argv.indexOf(e)}var r=require("karma"),s={configFile:path.join(__dirname,"./spec/karma.conf.js"),browsers:["PhantomJS"]};e("--chrome")&&s.browsers.push("Chrome"),e("--safari")&&s.browsers.push("Safari"),e("--ff")&&s.browsers.push("Firefox"),e("--ie")&&s.browsers.push("IE"),e("--cov")&&(s.preprocessors={"src/**/*.js":"coverage"},s.coverageReporter={type:"html",dir:"coverage/"},s.reporters=["coverage"]),console.log("Running tests..."),new r.Server(s,function(e){e?process.exit(e):(console.log("\tTests ran successfully.\n"),complete())}).start()}),task("default",["build","uglify"]);